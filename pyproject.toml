[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "guacamol"
dynamic = ["version"]
description = "Guacamol: benchmarks for de novo molecular design"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
authors = [{ name = "BenevolentAI", email = "guacamol@benevolent.ai" }]
requires-python = ">=3.9"
dependencies = [
    "joblib>=0.12.5",
    "numpy>=1.15.2",
    "scipy>=1.1.0",
    "tqdm>=4.26.0",
    "fcd>=1.1",
    "rdkit>=2021.9.2.1, <2022.9.5",
]

[project.urls]
Homepage = "https://github.com/BenevolentAI/guacamol"

[tool.setuptools.packages.find]
include = ["guacamol*"]

[tool.setuptools.dynamic]
version = { attr = "guacamol.__version__" }

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    "PLR0913", # too many arguments
    "PLW2901", # loop var overwritten
    "FBT0",    # boolean as positional argument
    "PLR2004", # magic value
    "E731",    # do not assign to lambda
    "B007",    # loop variable not used
    "COM812",  # no trailing comma
    "ARG002",  # unused method argument
    "TRY003",  # long message in exception
    "TRY002",  # create own exception
    "G004",    # logging using f-string
    "UP",      # format strings
    "T201",    # print used
    "EM1",     # strings in exception
    "N801",    # class name should be CamelCase
    "N802",    # function name should be lowercase
    "N803",    # argument name should be lowercase
    "N806",    # variable name should be lowercase
    "E501",    # line too long
    "S101",    # use of "assert"
    "PTH1",    # open() should be replaced
    "D",       # docstring
    "ANN401",  # dynamically typed *args, **kwargs
    "NPY002",  # legacy np random seed
]
[tool.ruff.lint.per-file-ignores]
# Test files do not need to have docstrings at each test function
# S101: assert, PLR2004: magic value comparison, T20: print statements
"**/test_*.py" = ["INP001", "PLR2004", "S101", "D101", "D102", "D103", "T20"]
"tests/**" = ["INP001", "PLR2004", "S101", "D101", "D102", "D103", "T20"]
